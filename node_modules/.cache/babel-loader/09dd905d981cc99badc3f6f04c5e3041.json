{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceDoAnTotNghiep\\\\ReactRedux\\\\src\\\\components\\\\Client\\\\DashboardResults\\\\index.js\";\nimport React from 'react';\nimport { Table, Slider } from \"antd\";\nimport \"./styles.css\";\nimport { connect } from 'react-redux'; //connect toi store\n\nimport { fetchTaskRequest } from '../../../actions/index';\n\nclass DashboardResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"s\"),\n      dataIndex: 'city',\n      key: 'city',\n      width: '30%'\n    }, {\n      title: 'V',\n      dataIndex: 'gold',\n      key: 'gold',\n      width: '16%'\n    }, {\n      title: 'B',\n      dataIndex: 'silver',\n      key: 'silver',\n      width: '16%'\n    }, {\n      title: 'Đ',\n      dataIndex: 'bronze',\n      key: 'bronze',\n      width: '16%'\n    }, {\n      title: 'Tổng',\n      dataIndex: 'total',\n      key: 'total',\n      width: '22%'\n    }];\n    this.state = {\n      tasks: [],\n      results: [{\n        city: 'TP. Hồ Chí Minh',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Hà Nội',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Thanh Hóa',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Cần Thơ',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Bình Dương',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Long An',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Đồng Tháp',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Phú Thọ',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Đà Nẵng',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }, {\n        city: 'Nghệ An',\n        gold: '1',\n        silver: '2',\n        bronze: '5',\n        total: '10'\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTaskRequest();\n  }\n\n  render() {\n    const results = this.props.results;\n    console.log('results', results);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      columns: this.columns,\n      dataSource: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n} // lay tat ca du lieu task tu store\n\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.vidu1Reducer\n  };\n}; // luu du lieu len store\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTaskRequest: tasks => {\n      dispatch(fetchTaskRequest(tasks));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardResults);","map":{"version":3,"sources":["C:\\SourceDoAnTotNghiep\\ReactRedux\\src\\components\\Client\\DashboardResults\\index.js"],"names":["React","Table","Slider","connect","fetchTaskRequest","DashboardResults","Component","constructor","props","columns","title","dataIndex","key","width","state","tasks","results","city","gold","silver","bronze","total","componentDidMount","render","console","log","mapStateToProps","vidu1Reducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Table, Slider } from \"antd\";\r\nimport \"./styles.css\";\r\n\r\nimport { connect } from 'react-redux';  //connect toi store\r\nimport { fetchTaskRequest } from '../../../actions/index';\r\n\r\nclass DashboardResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            results: [\r\n                { city: 'TP. Hồ Chí Minh', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Hà Nội', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Thanh Hóa', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Cần Thơ', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Bình Dương', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Long An', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Đồng Tháp', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Phú Thọ', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Đà Nẵng', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n                { city: 'Nghệ An', gold: '1', silver: '2', bronze: '5', total: '10' },\r\n            ]\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: <b>s</b>,\r\n            dataIndex: 'city',\r\n            key: 'city',\r\n            width: '30%'\r\n        },\r\n        {\r\n            title: 'V',\r\n            dataIndex: 'gold',\r\n            key: 'gold',\r\n            width: '16%'\r\n        },\r\n        {\r\n            title: 'B',\r\n            dataIndex: 'silver',\r\n            key: 'silver',\r\n            width: '16%'\r\n        },\r\n        {\r\n            title: 'Đ',\r\n            dataIndex: 'bronze',\r\n            key: 'bronze',\r\n            width: '16%'\r\n        },\r\n        {\r\n            title: 'Tổng',\r\n            dataIndex: 'total',\r\n            key: 'total',\r\n            width: '22%'\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTaskRequest();\r\n    }\r\n\r\n    render() {\r\n        const { results } = this.props\r\n        console.log('results',results)\r\n        return (\r\n            <div>\r\n                <Table bordered columns={this.columns} dataSource={this.state.results} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// lay tat ca du lieu task tu store\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.vidu1Reducer\r\n    }\r\n}\r\n\r\n// luu du lieu len store\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchTaskRequest: (tasks) => {\r\n            dispatch(fetchTaskRequest(tasks));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardResults);"]},"metadata":{},"sourceType":"module"}