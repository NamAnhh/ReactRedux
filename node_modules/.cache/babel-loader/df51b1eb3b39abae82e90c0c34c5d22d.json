{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceDoAnTotNghiep\\\\ReactRedux\\\\src\\\\components\\\\studentList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudent } from \"../actions/studentAction\";\n\nclass StudentList extends React.Component {\n  componentDidMount() {\n    console.log('props1', this.props);\n    this.props.fetchStudent();\n    console.log('props2', this.props);\n  }\n\n  render() {\n    console.log(\"sth\", this.props);\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          getStudentData = _this$props.getStudentData;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"ERROR! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, getStudentData.map(data => React.createElement(\"li\", {\n      key: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, data.name)));\n  }\n\n} //thằng studentRoot phải đặt trùng tên với rootReducer\n\n\nconst mapStateToProps = ({\n  studentRoot\n}) => ({\n  getStudentData: studentRoot.items,\n  loading: studentRoot.loading,\n  error: studentRoot.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStudent: () => dispatch(fetchStudent())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);","map":{"version":3,"sources":["C:\\SourceDoAnTotNghiep\\ReactRedux\\src\\components\\studentList.js"],"names":["React","connect","fetchStudent","StudentList","Component","componentDidMount","console","log","props","render","error","loading","getStudentData","message","map","data","_id","name","mapStateToProps","studentRoot","items","mapDispatchToProps","dispatch"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAGA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACtCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAA3B;AACA,SAAKA,KAAL,CAAWN,YAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAA3B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAELH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAKC,KAAvB;AAFK,wBAGsC,KAAKA,KAH3C;AAAA,UAGGE,KAHH,eAGGA,KAHH;AAAA,UAGUC,OAHV,eAGUA,OAHV;AAAA,UAGmBC,cAHnB,eAGmBA,cAHnB;;AAIL,QAAIF,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACH;;AAED,QAAIF,OAAJ,EAAa;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,cAAc,CAACE,GAAf,CAAmBC,IAAI,IACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,IAAI,CAACE,IAAzB,CADH,CADL,CADJ;AAQH;;AA3BqC,C,CA8B1C;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoB;AACxCP,EAAAA,cAAc,EAAEO,WAAW,CAACC,KADY;AAExCT,EAAAA,OAAO,EAAEQ,WAAW,CAACR,OAFmB;AAGxCD,EAAAA,KAAK,EAAES,WAAW,CAACT;AAHqB,CAApB,CAAxB;;AAMA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,YAAY,EAAE,MAAMoB,QAAQ,CAACpB,YAAY,EAAb;AADQ,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4ClB,WAA5C,CAAf","sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudent } from \"../actions/studentAction\";\r\n\r\n\r\nclass StudentList extends React.Component {\r\n    componentDidMount() {\r\n        console.log('props1', this.props)\r\n        this.props.fetchStudent();\r\n        console.log('props2', this.props)\r\n    }\r\n\r\n    render() {\r\n     \r\n        console.log(\"sth\",this.props)\r\n        const { error, loading, getStudentData } = this.props;\r\n        if (error) {\r\n            return <div>ERROR! {error.message}</div>\r\n        }\r\n\r\n        if (loading) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        return (\r\n            <ul>\r\n                {getStudentData.map(data =>\r\n                    <li key={data._id}>{data.name}</li>\r\n                )}\r\n            </ul>\r\n        );\r\n       \r\n    }\r\n}\r\n\r\n//thằng studentRoot phải đặt trùng tên với rootReducer\r\nconst mapStateToProps = ({studentRoot}) => ({\r\n    getStudentData: studentRoot.items,\r\n    loading: studentRoot.loading,\r\n    error: studentRoot.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchStudent: () => dispatch(fetchStudent()),  \r\n  })\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(StudentList);"]},"metadata":{},"sourceType":"module"}